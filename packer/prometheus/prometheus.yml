# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
       - localhost:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
   - "rules/*.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  #- job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

   # static_configs:
    #  - targets: ['localhost:9090']

  - job_name: 'dev_ec2_instances'
    ec2_sd_configs:
      - region: us-gov-west-1
        port: 9100
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Environment]
        regex: 'dev.*'
        action: 'keep'
     # Use the instance tag as the instance label
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
  - job_name: 'stage_ec2_instances'
    ec2_sd_configs:
      - region: us-gov-west-1
        port: 9100
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Environment]
        regex: 'staging.*'
        action: 'keep'
     # Use the instance tag as the instance label
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
  - job_name: 'utility_ec2_instances'
    ec2_sd_configs:
      - region: us-gov-west-1
        port: 9100
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Environment]
        regex: 'utility.*'
        action: 'keep'
     # Use the instance tag as the instance label
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
  #- job_name: 'federate'
  #  scrape_interval: 60s
  #  honor_labels: true
  #  metrics_path: '/federate'
  #  params:
  #      'match[]':
  #        - '{job="myservice"}'
  #  static_configs:
  #      - targets:
  #        - '10.247.80.5:9090'

# Collect metrics from Consul Servers
  - job_name: 'consul-metrics'
    metrics_path: '/v1/agent/metrics'
    params:
      format: ['prometheus']
    ec2_sd_configs:
      - region: us-gov-west-1
        port: 8500
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name]
        regex: 'consul-.*'
        action: 'keep'
     # Use the instance tag as the instance label
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
      - source_labels: [__meta_ec2_tag_Environment]
        target_label: environment
      - source_labels: [__meta_ec2_private_ip]
        target_label: ip_address

  # Collect Metrics from our Vault instances via StatsD Exporter
  - job_name: 'vault-metrics'
    metrics_path: '/metrics'
    ec2_sd_configs:
      - region: us-gov-west-1
        port: 9102
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name]
        regex: 'vault-.*'
        action: 'keep'
     # Use the instance tag as the instance label
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
      - source_labels: [__meta_ec2_tag_Environment]
        target_label: environment
      - source_labels: [__meta_ec2_private_ip]
        target_label: ip_address

  # Monitor the Vault Service Health Endpoint
  - job_name: 'vault-health'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    ec2_sd_configs:
      - region: us-gov-west-1
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name]
        regex: 'vault-.*'
        action: 'keep'
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
      - source_labels: [__meta_ec2_tag_Environment]
        target_label: environment
      - source_labels: [__meta_ec2_private_ip]
        target_label: ip_address
      - source_labels: [__meta_ec2_private_ip]
        target_label: __param_target
        replacement: https://$1:8200/v1/sys/health?standbyok=true # Set the target parameter as the vault health endpoint
      - target_label: __address__
        replacement: localhost:9115  # The blackbox exporter's real hostname:port.
      - source_labels: []
        target_label: service
        replacement: Vault # Create a service label for alerting purposes

  # Collect Dev Swarm metrics
  - job_name: 'docker-swarm-metrics'
    ec2_sd_configs:
      - region: us-gov-west-1
        port: 9323
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name]
        regex: 'docker-.*'
        action: 'keep'
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
      - source_labels: [__meta_ec2_tag_Environment]
        target_label: environment
      - source_labels: [__meta_ec2_private_ip]
        target_label: ip_address
